{"version":3,"file":"static/chunks/pages/text-generator-a8e140c99d8dd399.js","mappings":"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","sources":["webpack://_N_E/?402c","webpack://_N_E/./components/Common/Props/SingleRightPanel.js","webpack://_N_E/./components/Common/RightpanelDashboard.js","webpack://_N_E/./components/Common/StaticbarDashboard.js","webpack://_N_E/./components/TextGenerator/toast.ts","webpack://_N_E/./components/TextGenerator/TextGenerator.js","webpack://_N_E/./pages/text-generator/index.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/text-generator\",\n      function () {\n        return require(\"private-next-pages/text-generator/index.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/text-generator\"])\n      });\n    }\n  ","import React from \"react\";\r\n\r\nconst SingleRightPanel = ({ RightPanelData }) => {\r\n  return (\r\n    <>\r\n      {RightPanelData.map((item, index) => (\r\n        <li\r\n          className={`history-box ${item.isActive ? \"active\" : \"\"}`}\r\n          key={index}\r\n        >\r\n          {item.title}\r\n          <div className=\"dropdown history-box-dropdown\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"more-info-icon dropdown-toggle\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i className=\"feather-more-horizontal\"></i>\r\n            </button>\r\n            <ul className=\"dropdown-menu\">\r\n              {item.list.map((innerItem, innerIndex) => (\r\n                <li key={innerIndex}>\r\n                  <a className=\"dropdown-item\" href=\"#\">\r\n                    <i className={`feather-${innerItem.icon}`}></i>{\" \"}\r\n                    {innerItem.text}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleRightPanel;\r\n","import React, { useState } from \"react\";\r\n\r\nimport RightPanelData from \"../../data/dashboard.json\";\r\nimport SingleRightPanel from \"./Props/SingleRightPanel\";\r\nimport { useAppContext } from \"@/context/Context\";\r\n\r\nconst RightpanelDashboard = () => {\r\n  const { shouldCollapseRightbar } = useAppContext();\r\n  const [sectionStates, setSectionStates] = useState({\r\n    previous: true,\r\n    yesterday: true,\r\n    older: true,\r\n  });\r\n\r\n  const toggleSection = (section) => {\r\n    setSectionStates((prevState) => ({\r\n      ...prevState,\r\n      [section]: !prevState[section],\r\n    }));\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`rbt-right-side-panel popup-dashboardright-section ${\r\n          shouldCollapseRightbar ? \"collapsed\" : \"\"\r\n        }`}\r\n      >\r\n        <div className=\"right-side-top\">\r\n          <a\r\n            className=\"btn-default bg-solid-primary\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#newchatModal\"\r\n          >\r\n            <span className=\"icon\">\r\n              <i className=\"feather-plus-circle\"></i>\r\n            </span>\r\n            <span>New Chat</span>\r\n          </a>\r\n        </div>\r\n        <div className=\"right-side-bottom\">\r\n          <div className=\"small-search search-section mb--20\">\r\n            <input type=\"search\" placeholder=\"Search Here...\" />\r\n            <i className=\"feather-search\"></i>\r\n          </div>\r\n\r\n          <div className=\"chat-history-section\">\r\n            <h6 className=\"title\">Today</h6>\r\n            <ul className=\"chat-history-list\">\r\n              {RightPanelData &&\r\n                RightPanelData.rightPanel.map((data, index) => (\r\n                  <SingleRightPanel\r\n                    {...data}\r\n                    key={index}\r\n                    RightPanelData={data.today}\r\n                  />\r\n                ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div\r\n            className={`chat-history-section has-show-more ${\r\n              !sectionStates.yesterday ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            <h6 className=\"title\">Yesterday</h6>\r\n            <ul className=\"chat-history-list has-show-more-inner-content\">\r\n              {RightPanelData &&\r\n                RightPanelData.rightPanel.map((data, index) => (\r\n                  <SingleRightPanel\r\n                    {...data}\r\n                    key={index}\r\n                    RightPanelData={data.yesterday}\r\n                  />\r\n                ))}\r\n            </ul>\r\n            <div\r\n              className={`rbt-show-more-btn ${\r\n                !sectionStates.yesterday ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => toggleSection(\"yesterday\")}\r\n            >\r\n              Show More\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className={`chat-history-section has-show-more ${\r\n              !sectionStates.previous ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            <h6 className=\"title\">Previous 7 days</h6>\r\n            <ul className=\"chat-history-list has-show-more-inner-content\">\r\n              {RightPanelData &&\r\n                RightPanelData.rightPanel.map((data, index) => (\r\n                  <SingleRightPanel\r\n                    {...data}\r\n                    key={index}\r\n                    RightPanelData={data.previous}\r\n                  />\r\n                ))}\r\n            </ul>\r\n            <div\r\n              className={`rbt-show-more-btn ${\r\n                !sectionStates.previous ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => toggleSection(\"previous\")}\r\n            >\r\n              Show More\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className={`chat-history-section has-show-more ${\r\n              !sectionStates.older ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            <h6 className=\"title\">November</h6>\r\n            <ul className=\"chat-history-list has-show-more-inner-content\">\r\n              {RightPanelData &&\r\n                RightPanelData.rightPanel.map((data, index) => (\r\n                  <SingleRightPanel\r\n                    {...data}\r\n                    key={index}\r\n                    RightPanelData={data.older}\r\n                  />\r\n                ))}\r\n            </ul>\r\n            <div\r\n              className={`rbt-show-more-btn mb--100 ${\r\n                !sectionStates.older ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => toggleSection(\"older\")}\r\n            >\r\n              Show More\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RightpanelDashboard;\r\n","import Form from \"@/pages/Form\";\r\nimport React from \"react\";\r\n\r\nconst StaticbarDashboard = () => {\r\n  return (\r\n    <>\r\n      <div className=\"rbt-static-bar\">\r\n        <Form />\r\n\r\n        <p className=\"b3 small-text\">\r\n          ChatenAi can make mistakes. Consider checking important information.\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaticbarDashboard;\r\n","import toast from \"react-hot-toast\";\n\nconst Toast = {\n    SuccessshowToast: (message: string) => {\n        toast.success(message, {\n            style: {\n                border: \"1px solid #28a745\",\n                padding: \"16px\",\n                color: \"#000\",\n                backgroundColor: \"trnasparent\",\n            },\n            iconTheme: {\n                primary: \"#000\",\n                secondary: \"#28a745\",\n            },\n        });\n    },\n\n    ErrorShowToast: (message: string) => {\n        toast.error(message, {\n            style: {\n                border: \"1px solid #FF0000\",\n                padding: \"16px\",\n                color: \"red\",\n                backgroundColor: \"trnasparent\",\n            },\n            iconTheme: {\n                primary: \"black\",\n                secondary: \"#FF0000\",\n            },\n        });\n    },\n};\n\nexport default Toast;\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { MoonLoader } from \"react-spinners\";\r\nimport { GoogleGenerativeAI, HarmBlockThreshold, HarmCategory } from \"@google/generative-ai\";\r\nimport Toast from \"./toast\";\r\n\r\nconst safetySettings = [\r\n  { category: HarmCategory.HARM_CATEGORY_HARASSMENT, threshold: HarmBlockThreshold.BLOCK_NONE },\r\n  { category: HarmCategory.HARM_CATEGORY_HATE_SPEECH, threshold: HarmBlockThreshold.BLOCK_NONE },\r\n  { category: HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT, threshold: HarmBlockThreshold.BLOCK_NONE },\r\n  { category: HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT, threshold: HarmBlockThreshold.BLOCK_NONE },\r\n];\r\n\r\nconst formatAiResponse = (data) => {\r\n  try {\r\n    const parsedData = JSON.parse(data);\r\n\r\n    // Directly extract values from parsedData\r\n    const wasteName = parsedData.waste_name || parsedData.name || \"UNKNOWN WASTE\";\r\n    const recyclableProbability = parseFloat(parsedData.recyclable_probability) || 0; // Convert to float\r\n    const nonRecyclableProbability = parseFloat(parsedData.non_recyclable_probability) || 0; // Convert to float\r\n    const wasteType = parsedData.waste_type || parsedData.type_of_waste || \"UNKNOWN TYPE\";\r\n    const material = parsedData.material || parsedData.material_type || \"UNKNOWN MATERIAL\";\r\n    const count = parseInt(parsedData.count) || 0; // Convert to integer\r\n\r\n    // Handle recycling_steps: check if it's a string and split if necessary\r\n    let recyclingSteps = [];\r\n    if (typeof parsedData.recycling_steps === 'string') {\r\n      // Check if the string contains numbered steps\r\n      if (/^\\d+\\.\\s/.test(parsedData.recycling_steps)) {\r\n        recyclingSteps = parsedData.recycling_steps.split(/\\d+\\.\\s+/).slice(1).map(step => step.trim()).filter(step => step);\r\n      } else {\r\n        recyclingSteps = [parsedData.recycling_steps.trim()]; // Treat as a single step if not numbered\r\n      }\r\n    } else {\r\n      recyclingSteps = parsedData.recycling_steps || []; // Fallback to empty array if not found\r\n    }\r\n\r\n    return (\r\n      <div className=\"ai-response\">\r\n        <h2 className=\"waste-name\">{wasteName.toUpperCase()} ♻️</h2>\r\n        <div className=\"probabilities\">\r\n          <p><strong>Recyclable Probability:</strong> {recyclableProbability.toFixed(2)} % 🌱</p>\r\n          <p><strong>Non-Recyclable Probability:</strong> {nonRecyclableProbability.toFixed(2)} % 🚫</p>\r\n        </div>\r\n        <div className=\"waste-type-material\">\r\n          <p><strong>Type of Waste:</strong> {wasteType} | <strong>Material Used:</strong> {material} 🏷️</p>\r\n        </div>\r\n        <p><strong>Total Count of Waste:</strong> {count} 🗑️</p>\r\n        <p><strong>Steps to Recycle:</strong></p>\r\n        <ul>\r\n          {recyclingSteps.map((step, index) => (\r\n            <li key={index}>🔄 {step}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Error parsing AI response:\", error);\r\n    return <p>Error displaying AI response.</p>;\r\n  }\r\n};\r\n\r\nconst Page = () => {\r\n  const videoRef = useRef(null);\r\n  const [photoData, setPhotoData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [aiLoading, setAiLoading] = useState(false);\r\n  const [aiData, setAiData] = useState(null);\r\n  const [cameraStarted, setCameraStarted] = useState(false);\r\n  const [dimensions, setDimensions] = useState({ width: '100%', height: '400px' });\r\n  const [mediaStream, setMediaStream] = useState(null);\r\n\r\n  const updateDimensions = () => {\r\n    if (window.innerWidth <= 768) {\r\n      setDimensions({ width: '100%', height: '300px' });\r\n    } else if (window.innerWidth <= 1024) {\r\n      setDimensions({ width: '100%', height: '400px' });\r\n    } else {\r\n      setDimensions({ width: '100%', height: '500px' });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    window.addEventListener('resize', updateDimensions);\r\n    return () => window.removeEventListener('resize', updateDimensions);\r\n  }, []);\r\n\r\n  const startCamera = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" } });\r\n      if (videoRef.current) {\r\n        setLoading(false);\r\n        videoRef.current.srcObject = stream;\r\n        setMediaStream(stream);\r\n      }\r\n    } catch (err) {\r\n      Toast.ErrorShowToast(\"Error accessing camera\");\r\n      console.error(\"Error accessing camera:\", err);\r\n      alert(\"No video feed detected. Please ensure your camera is connected and allowed in browser settings.\");\r\n      location.reload();\r\n    }\r\n  };\r\n\r\n  const stopCamera = () => {\r\n    if (mediaStream) {\r\n      mediaStream.getTracks().forEach(track => track.stop());\r\n      setMediaStream(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      stopCamera();\r\n    };\r\n  }, []);\r\n\r\n  const capturePhoto = () => {\r\n    if (videoRef.current) {\r\n      const video = videoRef.current;\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      if (ctx) {\r\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        const dataURL = canvas.toDataURL(\"image/jpeg\");\r\n        setPhotoData(dataURL);\r\n      }\r\n    }\r\n  };\r\n\r\n  const scanImage = async () => {\r\n    try {\r\n      setAiLoading(true);\r\n      const genAI = new GoogleGenerativeAI(process.env.NEXT_PUBLIC_GEMINI_API_KEY);\r\n      const model = genAI.getGenerativeModel({ model: \"gemini-1.5-pro\", safetySettings: safetySettings });\r\n      const prompt = \"Does this look like a recyclable or non recyclable waste to you? Send the % of probability, only with two decimals. Don't send 'yes' or 'no' text, only %. Send both the % of how much it's recyclable and how much it's non-recyclable. Also, tell the type of waste like dry waste , wet waste etc., and detect the type of material used in the waste, give a relevant name to the waste and total count of waste and steps to recycle it too. Send response in a json type without ``` or extra anything – pure keys and values in json and use only these values for the description waste_name, recyclable_probability, non_recyclable_probability, waste_type, material, count, recycling_steps\"\r\n      const formatMatch = photoData.match(/^data:(image\\/(\\w+));base64,/);\r\n      if (!formatMatch) {\r\n        console.error(\"Unsupported image format\");\r\n        alert(\"Unsupported image format\");\r\n        return;\r\n      }\r\n      const image = {\r\n        inlineData: {\r\n          data: photoData.replace(formatMatch[0], \"\"),\r\n          mimeType: \"image/jpeg\",\r\n        },\r\n      };\r\n      const result = await model.generateContent([prompt, image]);\r\n      const jsonString = result.response.text().replace(/```json([\\s\\S]*?)```/, \"$1\");\r\n      setAiData(jsonString);\r\n    } catch (err) {\r\n      console.error(\"Error scanning image:\", err);\r\n      alert(\"Error scanning image\" + err);\r\n    } finally {\r\n      setAiLoading(false);\r\n      stopCamera();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (photoData && !aiData) {\r\n      scanImage();\r\n    }\r\n  }, [photoData]);\r\n\r\n  return (\r\n    <>\r\n      <style jsx>{`\r\n        .centered-container {\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: center;\r\n          align-items: center;\r\n          min-height: 40vh;\r\n          box-sizing: border-box;\r\n          padding: 20px;\r\n          overflow: hidden;\r\n          width: 100%;\r\n          max-width: 1200px;\r\n          margin: 0 auto;\r\n        }\r\n        .content {\r\n          text-align: center;\r\n          width: 100%;\r\n          margin-bottom: 2rem;\r\n        }\r\n        .video-container {\r\n          width: 100%;\r\n          max-width: ${dimensions.width};\r\n          margin: 0 auto;\r\n        }\r\n        .video-border {\r\n          border: 7px solid #4c63cd;\r\n          border-radius: 16px;\r\n          width: 100%;\r\n          height: ${dimensions.height};\r\n          object-fit: cover;\r\n        }\r\n        .button-container {\r\n          width: 100%;\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n        .loading-overlay {\r\n          position: fixed;\r\n          top:  0;\r\n          left: 0;\r\n          width: 100%;\r\n          height: 100vh;\r\n          background-color: rgba(0, 0, 0, 0.5);\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n        }\r\n        .ai-response {\r\n          background-color: #34 C759;\r\n          padding: 20px;\r\n          border-radius: 16px;\r\n          width: 100%;\r\n          max-width: 400px;\r\n          margin: 0 auto;\r\n        }\r\n        .waste-name {\r\n          font-size: 24px;\r\n          font-weight: bold;\r\n          margin-bottom: 10px;\r\n        }\r\n        .probabilities {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          margin-bottom: 10px;\r\n        }\r\n        .waste-type-material {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          margin-bottom: 10px;\r\n        }\r\n        .button {\r\n          margin: 10px auto;\r\n          display: block;\r\n        }\r\n        @media (max-width: 768px) {\r\n          .centered-container {\r\n            padding: 10px;\r\n          }\r\n        }\r\n      `}</style>\r\n\r\n      <div className=\"centered-container\">\r\n        {!cameraStarted && (\r\n          <div className=\"content\">\r\n            <h1 className=\"text-3xl font-bold mb-4\">Scan Waste</h1>\r\n            <p className=\"text-lg mb-4\">\r\n              To start scanning, click the button below to open the camera.\r\n            </p>\r\n          </div>\r\n        )}\r\n        {aiData ? (\r\n          <div>\r\n            {formatAiResponse(aiData)}\r\n            <button\r\n              onClick={() => location.reload()}\r\n              className=\"btn-default btn-small round button\"\r\n            >\r\n              Scan More 📸\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"button-container\">\r\n            {!cameraStarted ? (\r\n              <button\r\n                onClick={() => {\r\n                  setCameraStarted(true);\r\n                  startCamera();\r\n                }}\r\n                className=\"btn-default btn-small round button\"\r\n              >\r\n                Open Camera\r\n              </button>\r\n            ) : (\r\n              <>\r\n                <h2>Aim The Camera At The Waste</h2>\r\n                <div className=\"video-container\">\r\n                  {loading ? (\r\n                    <div\r\n                      className=\"w-full rounded-lg relative animate-pulse bg-black/80\"\r\n                      style={{ height: dimensions.height, borderRadius: \"16px\" }}\r\n                    />\r\n                  ) : (\r\n                    <video\r\n                      ref={videoRef}\r\n                      autoPlay\r\n                      muted\r\n                      className=\"video-border\"\r\n                      style={{\r\n                        objectFit: 'cover',\r\n                        width: '100%',\r\n                        height: dimensions.height\r\n                      }}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <button\r\n                  onClick={() => {\r\n                    capturePhoto();\r\n                  }}\r\n                  className=\"btn-default btn-small round button\"\r\n                >\r\n                  Submit\r\n                </button>\r\n                {aiLoading && (\r\n                  <div className=\"loading-overlay\">\r\n                    <MoonLoader color=\"#fff\" size={90} />\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page;","import React from \"react\";\r\nimport PageHead from \"../Head\";\r\nimport Context from \"@/context/Context\";\r\nimport HeaderDashboard from \"@/components/Header/HeaderDashboard\";\r\nimport PopupMobileMenu from \"@/components/Header/PopupMobileMenu\";\r\nimport RightpanelDashboard from \"@/components/Common/RightpanelDashboard\";\r\nimport LeftpanelDashboard from \"@/components/Common/LeftpanelDashboard\";\r\nimport Modal from \"@/components/Common/Modal\";\r\nimport TextGenerator from \"@/components/TextGenerator/TextGenerator\";\r\nimport StaticbarDashboard from \"@/components/Common/StaticbarDashboard\";\r\n\r\nconst TextGeneratorPage = () => {\r\n  return (\r\n    <>\r\n      <PageHead title=\"Text Generator\" />\r\n\r\n      <main className=\"page-wrapper rbt-dashboard-page\">\r\n        <Context>\r\n          <div className=\"rbt-panel-wrapper\">\r\n            <HeaderDashboard display=\"\" />\r\n            <PopupMobileMenu />\r\n            <LeftpanelDashboard />\r\n            <Modal />\r\n\r\n            <div className=\"rbt-main-content\">\r\n              <div className=\"rbt-daynamic-page-content\">\r\n                <div className=\"rbt-dashboard-content\">\r\n                  <div className=\"content-page\">\r\n                    <TextGenerator />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Context>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextGeneratorPage;\r\n"],"names":["window","__NEXT_P","push","__webpack_require__","Props_SingleRightPanel","RightPanelData","param","jsx_runtime","jsx","Fragment","map","item","index","jsxs","li","className","concat","isActive","title","div","button","type","data-bs-toggle","aria-expanded","i","ul","list","innerItem","innerIndex","a","href","icon","text","Common_RightpanelDashboard","shouldCollapseRightbar","useAppContext","sectionStates","setSectionStates","useState","previous","yesterday","older","toggleSection","prevState","section","data-bs-target","span","input","placeholder","h6","data","react","createElement","SingleRightPanel","key","today","onClick","__webpack_exports__","Z","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Form","p","toast","ErrorShowToast","error","message","style","border","padding","color","backgroundColor","iconTheme","primary","secondary","safetySettings","category","HarmCategory","HARM_CATEGORY_HARASSMENT","threshold","HarmBlockThreshold","BLOCK_NONE","HARM_CATEGORY_HATE_SPEECH","HARM_CATEGORY_DANGEROUS_CONTENT","HARM_CATEGORY_SEXUALLY_EXPLICIT","formatAiResponse","parsedData","JSON","parse","wasteName","waste_name","name","recyclableProbability","parseFloat","recyclable_probability","nonRecyclableProbability","non_recyclable_probability","wasteType","waste_type","type_of_waste","material","material_type","count","parseInt","recyclingSteps","recycling_steps","test","split","slice","step","trim","filter","h2","toUpperCase","strong","toFixed","console","TextGenerator","videoRef","useRef","photoData","setPhotoData","loading","setLoading","aiLoading","setAiLoading","aiData","setAiData","cameraStarted","setCameraStarted","dimensions","setDimensions","width","height","mediaStream","setMediaStream","updateDimensions","innerWidth","useEffect","addEventListener","removeEventListener","startCamera","stream","navigator","mediaDevices","getUserMedia","video","facingMode","current","srcObject","err","Toast","alert","location","reload","stopCamera","getTracks","forEach","track","stop","capturePhoto","canvas","document","videoWidth","videoHeight","ctx","getContext","drawImage","toDataURL","scanImage","model","genAI","GoogleGenerativeAI","process","getGenerativeModel","formatMatch","match","image","inlineData","replace","mimeType","jsonString","result","generateContent","response","h1","borderRadius","ref","autoPlay","muted","objectFit","MoonLoader","size","text_generator","PageHead","main","Context","HeaderDashboard","display","PopupMobileMenu","LeftpanelDashboard","Modal"],"sourceRoot":""}